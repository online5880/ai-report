name: Django CI and Push to ECR

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    # 코드 체크아웃
    - uses: actions/checkout@v4

    # Docker 설정
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # Docker Compose 설치
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    # Docker 이미지 빌드
    - name: Build Docker Image
      run: |
        IMAGE_TAG=$(git rev-parse --short HEAD)  # Git 커밋 해시를 태그로 사용
        docker build -t ai-report-web:$IMAGE_TAG .

    # 빌드된 Docker 이미지 디버깅
    - name: Debug Docker Images
      run: docker images | grep ai-report-web

    # Docker Compose를 사용해 Django 테스트 실행
    - name: Run Tests with Docker Compose
      run: |
        docker-compose up --build -d
        sleep 10
        docker-compose exec -T web python manage.py test
        docker-compose down  # 테스트 완료 후 컨테이너 정리

  push-to-ecr:
    needs: build-and-test  # build-and-test 단계 성공 시 실행
    runs-on: ubuntu-latest
    steps:
    # 코드 체크아웃
    - uses: actions/checkout@v4

    # Docker 설정
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # AWS ECR 로그인
    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ap-northeast-2 \
        | docker login --username AWS --password-stdin 339712929315.dkr.ecr.ap-northeast-2.amazonaws.com
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # Docker 이미지 태그 및 ECR로 푸시
    - name: Tag and Push Docker Image to ECR
      run: |
        IMAGE_TAG=$(git rev-parse --short HEAD)
        docker tag ai-report-web:$IMAGE_TAG 339712929315.dkr.ecr.ap-northeast-2.amazonaws.com/bigdata/team-01:$IMAGE_TAG
        docker push 339712929315.dkr.ecr.ap-northeast-2.amazonaws.com/bigdata/team-01:$IMAGE_TAG
